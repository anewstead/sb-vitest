/* stylelint-disable number-max-precision */

// Flex utilities
// e.g. <div class="flex flex-col">
// flex can also use "gap" classes see _grid.scss
.flex {
  display: flex;
}

.flex-col {
  flex-direction: column;
}

.flex-row {
  flex-direction: row;
}

.flex-wrap {
  flex-wrap: wrap;
}

.flex-nowrap {
  flex-wrap: nowrap;
}

.flex-wrap-reverse {
  flex-wrap: wrap-reverse;
}

.justify-start {
  justify-content: flex-start;
}

.justify-center {
  justify-content: center;
}

.justify-end {
  justify-content: flex-end;
}

.justify-between {
  justify-content: space-between;
}

.justify-around {
  justify-content: space-around;
}

.justify-evenly {
  justify-content: space-evenly;
}

.items-start {
  align-items: flex-start;
}

.items-center {
  align-items: center;
}

.items-end {
  align-items: flex-end;
}

.items-baseline {
  align-items: baseline;
}

.items-stretch {
  align-items: stretch;
}

.content-center {
  align-content: center;
}

.content-between {
  align-content: space-between;
}

.content-start {
  align-content: flex-start;
}

.content-end {
  align-content: flex-end;
}

.content-around {
  align-content: space-around;
}

.content-evenly {
  align-content: space-evenly;
}

.content-stretch {
  align-content: stretch;
}

.self-center {
  align-self: center;
}

.self-start {
  align-self: flex-start;
}

.self-end {
  align-self: flex-end;
}

.self-stretch {
  align-self: stretch;
}

.self-baseline {
  align-self: baseline;
}

.flex-grow {
  flex-grow: 1;
}

.flex-grow-0 {
  flex-grow: 0;
}

.flex-shrink {
  flex-shrink: 1;
}

.flex-shrink-0 {
  flex-shrink: 0;
}

.flex-auto {
  flex: 1 1 auto;
}

.flex-initial {
  flex: 0 1 auto;
}

.flex-none {
  flex: none;
}

.flex-row-reverse {
  flex-direction: row-reverse;
}

.flex-col-reverse {
  flex-direction: column-reverse;
}

// Flex grow values
$-flex-scale: (
  1: 1 1 0%,
  2: 2 1 0%,
  3: 3 1 0%,
  4: 4 1 0%,
  5: 5 1 0%,
  6: 6 1 0%,
  7: 7 1 0%,
  8: 8 1 0%,
  9: 9 1 0%,
  10: 10 1 0%,
  11: 11 1 0%,
  12: 12 1 0%,
);

// e.g. <div class="flex-2">
@each $size, $value in $-flex-scale {
  .flex-#{$size} {
    flex: #{$value};
  }
}

// Order values
$-order-scale: (
  1: 1,
  2: 2,
  3: 3,
  4: 4,
  5: 5,
  6: 6,
  7: 7,
  8: 8,
  9: 9,
  10: 10,
  11: 11,
  12: 12,
);

// e.g. <div class="order-2">
@each $size, $value in $-order-scale {
  .order-#{$size} {
    order: #{$value};
  }
}

.order-first {
  order: -9999;
}

.order-last {
  order: 9999;
}

// Basis values
$-basis-scale: (
  "0": 0,
  "auto": auto,
  "1\\/2": 50%,
  "1\\/3": 33.333333%,
  "2\\/3": 66.666667%,
  "1\\/4": 25%,
  "3\\/4": 75%,
  "1\\/5": 20%,
  "2\\/5": 40%,
  "3\\/5": 60%,
  "4\\/5": 80%,
  "1\\/6": 16.666667%,
  "5\\/6": 83.333333%,
  "1\\/12": 8.333333%,
  "2\\/12": 16.666667%,
  "3\\/12": 25%,
  "4\\/12": 33.333333%,
  "5\\/12": 41.666667%,
  "6\\/12": 50%,
  "7\\/12": 58.333333%,
  "8\\/12": 66.666667%,
  "9\\/12": 75%,
  "10\\/12": 83.333333%,
  "11\\/12": 91.666667%,
  "full": 100%,
);

// e.g. <div class="basis-1/2">
@each $size, $value in $-basis-scale {
  .basis-#{$size} {
    flex-basis: #{$value};
  }
}
